<project name="seajs-build" default="build_seajs" basedir="../">
  <description>SeaJS Build File</description>

  <dirname property="root.dir" file="${ant.file.seajs-build}/../"/>
  <property name="tools.dir" location="${root.dir}/tools/"/>
  <property name="src.dir" location="${root.dir}/src/"/>
  <property name="dist.dir" location="${root.dir}/dist/"/>
  <property name="tmp.dir" location="${dist.dir}/tmp/"/>

  <property name="module.name" value="sea"/>
  <property name="version" value="2.0.0-dev"/>
  <property name="charset" value="utf-8"/>

  <property name="src.file" value="${tmp.dir}/${module.name}-src.js"/>
  <property name="debug.file" value="${dist.dir}/${module.name}-debug.js"/>
  <property name="min.file" value="${dist.dir}/${module.name}.js"/>
  <property name="map.file" value="${dist.dir}/${module.name}.js.map"/>
  <property name="online.plugins" value="plugin-combo.js,plugin-warning.js"/>

  <target name="concat">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${tmp.dir}"/>

    <concat destfile="${src.file}"
            encoding="${charset}"
            outputencoding="${charset}">

      <path path="${src.dir}/intro.js"/>
      <path path="${src.dir}/sea.js"/>

      <path path="${src.dir}/util-lang.js"/>
      <path path="${src.dir}/util-log.js"/>
      <path path="${src.dir}/util-events.js"/>
      <path path="${src.dir}/util-path.js"/>
      <path path="${src.dir}/util-request.js"/>
      <path path="${src.dir}/util-deps.js"/>

      <path path="${src.dir}/module.js"/>
      <path path="${src.dir}/config.js"/>
      <path path="${src.dir}/bootstrap.js"/>

      <path path="${src.dir}/outro.js"/>
    </concat>
  </target>

  <target name="prepare_seajs" depends="concat">
    <replaceregexp file="${src.file}"
                   match="@VERSION"
                   replace="${version}"
                   flags="g"
                   encoding="${charset}"/>

    <copy file="${src.file}" tofile="${debug.file}" overwrite="true"/>
  </target>

  <target name="prepare_plugins">
    <copy todir="${dist.dir}" overwrite="true">
      <fileset dir="${src.dir}/plugins" includes="*.js"/>
    </copy>

    <mkdir dir="${tmp.dir}"/>

    <!-- Move online plugins to tmp folder for compressing -->
    <move todir="${tmp.dir}">
      <fileset dir="${dist.dir}" includes="${online.plugins}"/>
      <mapper type="regexp"
              from="^(.*)\.(js|css)$"
              to="\1-src.\2"/>
    </move>

    <move file="${map.file}" tofile="${map.file}.bak"/>
  </target>

  <target name="compress">
    <apply executable="java" verbose="true" dest="${dist.dir}" failonerror="true">
      <fileset dir="${tmp.dir}" includes="*-src.js"/>

      <arg line="-jar"/>
      <arg path="${tools.dir}/compiler.jar"/>
      <arg line="--externs ${tools.dir}/extern.js"/>
      <arg line="--compilation_level=SIMPLE_OPTIMIZATIONS"/>
      <arg line="--language_in=ECMASCRIPT5_STRICT"/>

      <!-- http://code.google.com/p/closure-compiler/wiki/Warnings -->
      <arg line="--warning_level=VERBOSE"/>
      <arg line="--jscomp_off=checkTypes"/>
      <arg line="--jscomp_error=checkDebuggerStatement"/>

      <arg line="--js"/>
      <srcfile/>
      <arg line="--js_output_file"/>
      <targetfile/>
      <mapper type="regexp" from="^(.*)-src\.js$" to="\1.js"/>

      <arg line="--source_map_format=V3"/>
      <arg line="--create_source_map=${map.file}"/>
    </apply>
  </target>

  <target name="compress_seajs" depends="compress">
    <replaceregexp file="${map.file}"
                   match="[\w\/]+sea.js"
                   replace="sea.js"
                   encoding="${charset}"/>

    <replaceregexp file="${map.file}"
                   match="[\w\/]+sea-src.js"
                   replace="sea-debug.js"
                   encoding="${charset}"/>

    <concat destfile="${min.file}.tmp"
            encoding="${charset}"
            outputencoding="${charset}">
      <path path="${min.file}"/>
      <footer>//@ sourceMappingURL=sea.js.map</footer>
    </concat>

    <move file="${min.file}.tmp" tofile="${min.file}" overwrite="true"/>
  </target>

  <target name="compress_plugins" depends="compress">
    <move file="${map.file}.bak" tofile="${map.file}" overwrite="true"/>
  </target>

  <target name="clean">
    <delete dir="${tmp.dir}"/>
  </target>

  <target name="build_seajs" depends="prepare_seajs,compress_seajs,clean"/>
  <target name="build_plugins" depends="prepare_plugins,compress_plugins,clean"/>
</project>
